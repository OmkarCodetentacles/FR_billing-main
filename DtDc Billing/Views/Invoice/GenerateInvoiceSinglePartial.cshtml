
@model DtDc_Billing.Models.InvoiceModel
@{ 
    string baseurl = Request.Url.Scheme + "://" + Request.Url.Authority +
     Request.ApplicationPath.TrimEnd('/');
}

<link href="~/admin-lte/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css" rel="stylesheet" />
<script src="~/admin-lte/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>

<script>
    $("#overlayBlock").hide();
</script>
<div class="overlay" id="overlayBlock">
    <div class="loader"></div>
</div>




@using (Ajax.BeginForm("SaveSingleInvoice", new AjaxOptions() { HttpMethod = "Post", UpdateTargetId = "form-Cons", InsertionMode = InsertionMode.Replace, OnBegin = "onBegin", OnComplete = "onComplete", LoadingElementId = "myForm" }))
{
    <style>
        .padding-left-0 {
            padding-left: 0
        }

        Generatesingleinvoice th {
            width: 7.69% !important;
        }

        table {
            max-height: 400px !important;
            display: list-item !important;
            overflow: auto !important;
            border: 1px solid #e5ecf7;
        }

        th {
            width: 7.69%;
        }
    </style>

    <div class="content-wrapper">
        <div class="box box-info" style="padding: 16px 16px !important">
            <div class="box-header with-border">
                <h4>
                    Generate SINGLE Invoice
                    <a href="https://www.youtube.com/watch?v=_5jj1ozy0I0&list=PLT-Gd9X3Y1afr1FZRb8Z8ELFncnWwOhzz&index=27"
                       target="_blank"
                       data-toggle="tooltip"
                       title="Click to view more info">
                        <i class="fa fa-info-circle" style="font-size:25px;"></i>
                    </a>
                </h4>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-sm-12 ">
                        @{
                            var successMessage = ViewBag.success as string;
                        }

                        @if (!string.IsNullOrEmpty(successMessage))
                        {

                            @Html.Partial("~/Views/Shared/AlertPartial.cshtml", new Tuple<string, string>("success", successMessage))
                            <script>
                                function onComplete(xhr, status) {
                                    if (status === "success") {

                                        alert("Success")

                                        setTimeout(function () {
                                            location.reload();
                                        }, 1000);
                                    } else {

                                    }
                                }
                            </script>
                        }
                        <!-- /.box-header -->

                        <div class="form-horizontal">

                            <div class="row">
                                <div class="col-md-4">

                                    <div class="form-group">


                                        <div class="col-md-12 padding-left-0">
                                            <label for="email">Customer Id:</label>
                                            @Html.EditorFor(model => model.Customer_Id, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Customer_Id, "", new { @class = "text-danger" })

                                        </div>



                                    </div>
                                </div>


                                <div class="col-sm-4 padding-left-0">
                                    <div class="form-group">

                                        <div class="col-md-12">
                                            <label for="email">Invoice No:</label>
                                            @if (Model != null && Model.invoiceno.Length > 10)
                                            {
                                                @Html.EditorFor(model => model.invoiceno, new { htmlAttributes = new { @class = "form-control", @Value = Model.invoiceno, @readonly = "readonly" } })
                                            }

                                            else if (ViewBag.nextinvoice != null)
                                            {
                                                @Html.EditorFor(model => model.invoiceno, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.nextinvoice, @readonly = "readonly" } })
                                            }
                                            else if (ViewBag.lastInvoiceno != null)
                                            {
                                                @Html.EditorFor(model => model.invoiceno, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.lastInvoiceno, @readonly = "readonly" } })
                                            }
                                            else
                                            {
                                                @Html.EditorFor(model => model.invoiceno, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            }
                                        </div>

                                    </div>
                                </div>
                                <div class="col-sm-4 padding-left-0">
                                    <div class="form-group">

                                        <div class="col-md-12">
                                            <label for="email">Invoice Date:</label>
                                            @Html.EditorFor(model => model.tempInvoicedate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.tempInvoicedate, "", new { @class = "text-danger" })

                                        </div>


                                    </div>
                                </div>
                                <div class="col-md-4 padding-left-0">
                                    <div class="form-group">


                                        <div class="col-md-12">
                                            <label for="email">Period From:</label>
                                            @Html.EditorFor(model => model.Tempdatefrom, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Tempdatefrom, "", new { @class = "text-danger" })
                                        </div>



                                    </div>
                                </div>
                                @*<label for="departmentsDropdown">Firm Name</label>
                                    <select class="form-control" id="departmentsDropdown" name="departmentsDropdown" value="@ViewBag.firmname"></select>



                                    @Html.HiddenFor(m => m.Firm_Id, new { @Value = ViewBag.firmid })*@



                                <div class="col-sm-4 padding-left-0">
                                    <div class="form-group">

                                        <div class="col-md-12">
                                            <label for="email">Period To:</label>
                                            @Html.EditorFor(model => model.TempdateTo, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.TempdateTo, "", new { @class = "text-danger" })

                                        </div>



                                    </div>

                                </div>


                                <div class="col-sm-4 padding-left-0">
                                    <div class="form-group">

                                        <div class="col-md-12">
                                            <label for="email">Consignment No:</label>
                                            <input type="text" name="consiaddno" id="consiaddno" class="consiaddno" style="width:100%" required />
                                        </div>


                                    </div>

                                </div>
                                <div class="col-sm-4 padding-left-0">
                                    <div class="form-group">

                                        <div class="col-md-12">
                                            <label for="pwd">Address:</label>
                                            @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @rows = "3", @readonly = "readonly" })
                                        </div>



                                    </div>
                                </div>

                                <div class="col-sm-12">
                                    <div class="form-group" style="text-align:end">
                                        <div class="col-md-12">
                                            <button type="button" id="AddCons" style="margin:0;" class="btn btn-primary">Add</button>
                                        </div>


                                    </div>

                                </div>


                            </div>

                            <div class="">
                                <div class="col-md-12">
                                    <table id="generate-invoice" class="table Generatesingleinvoice">
                                        <thead>
                                            <tr>
                                                <th>Sr. No</th>
                                                <th>Consignment No</th>
                                                <th>Weight</th>
                                                <th>Pincode</th>
                                                <th>Mode</th>
                                                <th>Amount</th>
                                                <th>Booking</th>
                                                <th>Insurance</th>
                                                <th>Claim Amount</th>
                                                <th>Percentage</th>
                                                <th>Risk Surcharge</th>
                                                <th>Other Charges</th>
                                                <th>Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td colspan="13">No Data Found</td>
                                            </tr>
                                        </tbody>

                                    </table>
                                </div>
                            </div>
                            <!--<div class="row">-->
                            <!-- column -->
                            <!--<div class="col-sm-12">-->
                            <!-- Horizontal Form -->
                            <!--<div class="">-->
                            <!-- form start -->
                            <form class="">
                                @*<div class="box-body">*@
                                <!-- select -->
                                @*<div class="">*@
                                <div class="row" style="margin:0">
                                    @*<div class="col-sm-12 col-xs-12 mb-15">*@
                                    <!-- radio -->
                                    <div class="col-md-6">
                                        <div class="form-group">

                                            <label for="amount" class=" control-label">Invoice Discount</label>

                                            @if (ViewBag.disc == "yes")
                                            {
                                                <div class="radio">
                                                    <label>
                                                        @Html.RadioButtonFor(m => m.discount, "yes", new { @checked = true })
                                                        <span style="margin-left:21px">Yes</span>
                                                    </label>
                                                </div>
                                                <div class="radio">
                                                    <label>
                                                        @Html.RadioButtonFor(m => m.discount, "no")
                                                        <span style="margin-left:21px">No</span>
                                                    </label>
                                                </div>
                                            }
                                            else if (Model != null && Model.discount == "yes")
                                            {
                                                <div class="radio">
                                                    <label>
                                                        @Html.RadioButtonFor(m => m.discount, "yes", new { @checked = true })
                                                        <span style="margin-left:21px">Yes</span>
                                                    </label>
                                                </div>
                                                <div class="radio">
                                                    <label>
                                                        @Html.RadioButtonFor(m => m.discount, "no")
                                                        <span style="margin-left:21px">No</span>
                                                    </label>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="radio">
                                                    <label>
                                                        @Html.RadioButtonFor(m => m.discount, "yes")
                                                        <span style="margin-left:21px"> Yes</span>
                                                    </label>
                                                </div>
                                                <div class="radio">
                                                    <label>
                                                        @Html.RadioButtonFor(m => m.discount, "no", new { @checked = true })
                                                        <span style="margin-left:21px">No</span>
                                                    </label>
                                                </div>
                                            }




                                            <div id="discountdiv" style="display:none" class="col-sm-4">
                                                <div class=" no-padding">
                                                    @Html.EditorFor(model => model.discountper, new { htmlAttributes = new { @type = "text", @class = "form-control" } })

                                                </div>
                                                <div class="col-sm-offset-1 no-padding">
                                                    @Html.EditorFor(model => model.discountamount, new { htmlAttributes = new { @type = "text", @class = "form-control", @readonly = "readonly", @style = "width: 100px" } })

                                                </div>
                                            </div>

                                        </div>
                                        <div class="form-group">

                                            <label for="amount" class=" control-label">Reverse Charge</label>


                                            <div class="radio">
                                                <label>
                                                    <input type="radio" name="reverse-charge" id="reverse-charge-yes" value="rev-yes" checked>
                                                    <span style="margin-left:21px">Yes</span>
                                                </label>
                                            </div>


                                            <div class="radio">
                                                <label>
                                                    <input type="radio" name="reverse-charge" id="reverse-charge-no" value="cod-no">
                                                    <span style="margin-left:21px">No</span>
                                                </label>
                                            </div>



                                        </div>
                                        <!-- radio -->
                                    </div>
                                    <div class="col-md-6">

                                        <div class="col-sm-12 col-xs-12">
                                            <div class="form-group">

                                                <label for="total-amt" class=" control-label">Total</label>

                                                <div class="">
                                                    @Html.EditorFor(model => model.total, new { htmlAttributes = new { @type = "text", @class = "form-control", @readonly = "readonly" } })

                                                </div>

                                            </div>
                                        </div>
                                        <div class="col-sm-12 col-xs-12">
                                            <div id="two-block-inline" class="form-group">

                                                <label for="fuelsurcharge" class=" control-label">FuelSurcharge Tax</label>

                                                <div class="" style="display:flex;gap:3px">
                                                    @Html.EditorFor(model => model.fullsurchargetax, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                                                    @Html.EditorFor(model => model.fullsurchargetaxtotal, new { htmlAttributes = new { @type = "text", @class = "form-control", @readonly = "readonly" } })
                                                </div>

                                                <div class="">

                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12 col-xs-12">
                                            <div class="form-group">

                                                <label for="subtotal" class=" control-label">SubTotal</label>

                                                <div class="">
                                                    <input type="text" class="form-control" id="subtotal" readonly="readonly" placeholder="0">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12 col-xs-12">
                                            <div class="form-group">

                                                <label for="service-charge" class="control-label">Royalty Charge</label>

                                                <div class="">

                                                    @Html.EditorFor(model => model.Royalty_charges, new { htmlAttributes = new { @type = "text", @class = "form-control", @readonly = "readonly" } })

                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-12 col-xs-12">
                                            <div class="form-group">

                                                <label for="service-charge" class=" control-label">Docket Charge</label>


                                                <div class="">
                                                    @Html.EditorFor(model => model.Docket_charges, new { htmlAttributes = new { @type = "text", @class = "form-control", @readonly = "readonly" } })
                                                </div>
                                            </div>
                                        </div>


                                        <div class="col-sm-12 col-xs-12">
                                            <div class="form-group">

                                                <label for="gst-total" class=" control-label">GST</label>
                                                <div class="" style="display: flex; gap: 3px">
                                                    @Html.EditorFor(model => model.servicetax, new { htmlAttributes = new { @type = "text", @class = "form-control", @Value = "18" } })
                                                    @Html.EditorFor(model => model.servicetaxtotal, new { htmlAttributes = new { @type = "text", @class = "form-control", @readonly = "readonly" } })
                                                </div>
                                                <div class="">

                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12 col-xs-12">
                                            <div class="form-group">

                                                <label for="other-charge" class=" control-label">Other Charge</label>

                                                <div class="">
                                                    @Html.EditorFor(model => model.othercharge, new { htmlAttributes = new { @type = "text", @class = "form-control" } })

                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">

                                            <div class="col-sm-12">

                                                <label for="net-amount" class=" control-label">Net Amount</label>

                                                <div class="">

                                                    @Html.EditorFor(model => model.netamount, new { htmlAttributes = new { @type = "text", @class = "form-control", @readonly = "readonly" } })

                                                </div>

                                            </div>

                                        </div>
                                    </div>


                                </div>
                                @*</div>*@
                                @*</div>*@


                                <!-- /.box-body -->
                                <div style="padding:20px">
                                    @*<button type="submit" name="submit" value="Sms" class="btn btn-primary" id="Generate">Send Invoice From SMS</button>*@
                                    <button type="submit" name="submit" value="Email" class="btn btn-primary" id="Generate">Send Invoice From Email</button>
                                    @*<button type="submit" name="submit" value="Export" class="btn btn-primary">Export To D://ExportedInvoice</button>*@
                                    <button type="submit" name="submit" value="Generate" id="Generate" class="btn btn-primary">Generate</button>
                                    <button type="submit" name="submit" value="Save" class="btn btn-success pull-right" id="Generate">Save</button>
                                </div>
                                <!-- /.box-footer -->
                            </form>
                            <!--</div>-->
                            <!-- /.box -->
                            <!--</div>-->
                            <!--/.col (right) -->
                            <!--</div>-->
                            <!-- /.row -->
                            @*</div>*@
                        </div>


                        <input type="hidden" name="consignments" id="consignments" />
                    </div>
                </div>
            </div>
        </div>

    </div>

}

<script type="text/javascript">


    function scrollToTop() {
        window.scrollTo(0, 0);
    }


    function onBegin() {
        scrollToTop();

        var consignmentNumber = $("#consiaddno").val();
        var invdate = $("#tempInvoicedate").val();
        var TempFrom = $("#Tempdatefrom").val();
        var TempTo = $("#TempdateTo").val();

        if (consignmentNumber === null || consignmentNumber === "") {

            alert("Consignment number cannot be null.");


            return false;
        }
        else if (invdate == null || TempFrom == null || TempTo == null) {
            // If validation fails, prevent form submission
            alert("Validation failed. Please check your inputs.");
            return false;
        }
        else {
            // Show the loader
            document.getElementById('overlayBlock').style.display = 'block';
        }
    }

    function onComplete() {
        // Hide the loader
        scrollToTop();
        document.getElementById('overlayBlock').style.display = 'none';
    }
</script>
<style>

    .radio {
        display: inline-block;
        padding-right: 20px;
    }
</style>


<style>
    .input-validation-error {
        border: 1px solid #ff0000 !important;
    }
</style>


<script>
    // Scroll to the top of the page
    function scrollToTop() {
        window.scrollTo(0, 0);
    }
    function showLoader() {


        document.getElementById('overlayBlock').style.display = 'block';

    }
    //$(document).on('click', '#Generate', function () {


    //    scrollToTop();
    //    showLoader('overlayBlock');
    //    // Get the form element
    //    var form = $('#frmEmp');
    //    // Submit the form
    //    form.submit();
    //});
</script>
@*@if (ViewBag.success != null)
    {
        <script>
            //  alert("Invoice Added SuccessFully");
        </script>
    }*@


<style>
    #royalty-per {
        vertical-align: sub;
    }

    #Pf_code, #Royalty_Charges, #D_Docket, #P_Docket, #E_Docket, #V_Docket, #I_Docket, #N_Docket, #Insurance, #Minimum_Risk_Charge, #Other_Details, #Fuel_Sur_Charge, #Topay_Charge, #Cod_Charge, #Gec_Fuel_Sur_Charge {
        width: 100%;
    }
</style>

<style>
    .logo-text {
        font-size: 1.3em;
        font-family: 'Roboto Slab', serif;
    }
</style>
<style>
    .overlay {
        position: fixed;
        width: 100%;
        height: 100%;
        background-color: #00000052;
        top: 0;
        left: 0;
        z-index: 9999;
        display: none;
    }

    .loader {
        position: absolute;
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border-top: 16px solid blue;
        border-bottom: 16px solid blue;
        width: 120px;
        height: 120px;
        -webkit-animation: spin 2s linear infinite;
        top: 40%;
        animation: spin 2s linear infinite;
        bottom: 50%;
        left: 50%;
        right: 50%;
    }


    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>


<script>

    var total = 0;
    var D_Docket = 0, P_Docket = 0, E_Docket = 0, V_Docket = 0, I_Docket = 0, N_Docket = 0, G_Docket = 0;
    var Docket_Charge = 0;
    var Royalty_Per = 0;




    var array = new Array()




    $(document).ready(function () {



        var consignmets = '@ViewBag.consignmnts';



        if (consignmets != "") {


            array = consignmets.split(',');

            var str = array.join(',');

            $('#consignments').val(str);


            showtable();
        }


        $('#AddCons').click(function () {
            var consignmentNumber = $("#consiaddno").val();


            if (consignmentNumber === null || consignmentNumber === "") {

                alert("Consignment number cannot be null.");


                return false;
            }

            array.push($('#consiaddno').val().trim());

            $('#consiaddno').val('');

            var str = array.join(',');

            $('#consignments').val(str);


            showtable();
        });


        $('#Customer_Id').keyup(function () {
            // alert("Keyup");
            var custid = $("#Customer_Id").val();



            $.ajax({
                type: 'Get',
                dataType: 'json',
                url: '/Invoice/Invoicedetails',
                data: { CustomerId: custid },
                success: function (Data) {

                    $('#Address').val(Data.Company_Address);


                    $('#fullsurchargetax').val(Data.Fuel_Sur_Charge);

                    D_Docket = Data.D_Docket;
                    P_Docket = Data.P_Docket;
                    E_Docket = Data.E_Docket;
                    I_Docket = Data.I_Docket;
                    V_Docket = Data.V_Docket;
                    N_Docket = Data.N_Docket;
                    G_Docket = Data.G_Docket;
                    Royalty_Per = Data.Royalty_Charges;

                    showtable();
                }
            });


        });




        function showtable () {


            var Customerid = $('#Customer_Id').val();


            $("#generate-invoice tbody").empty();

            total = 0;
            Docket_Charge = 0;



          $.ajax({

	     type: 'Get',

         url: '/Invoice/InvoiceTableSingle',

	     traditional: true,

	     dataType: "json",

         data: { array: array, Customerid: Customerid },

	     success: function (data) {



        var rows;

        $.each(data, function (i, item) {
            if (i == 0) {

                $("#generate-invoice tbody").empty();
            }

            console.log(item.Consignment_no);
            rows += "<tr>"
                + "<td>" + (i + 1) + "</td>"
                + "<td>" + item.Consignment_no + "</td>"
                + "<td>" + item.chargable_weight + "</td>"
                + "<td>" + item.Pincode + "</td>"
                + "<td>" + item.Mode + "</td>"

                + "<td>" + item.Amount + "</td>"
                + "<td>" + item.tembookingdate + "</td>"
                + "<td>" + item.Insurance + "</td>"
                + "<td>" + item.Claimamount + "</td>"
                + "<td>" + item.Percentage + "</td>"
                + "<td>" + item.Risksurcharge + "</td>" +
                "<td>" + item.loadingcharge + "</td>"
                + "<td>" + (item.Risksurcharge + item.Amount + item.loadingcharge) + "</td>"

                + "</tr>";




            ///////Calculating Docket amount
            var str = item.Consignment_no;
            var res = str.charAt(0);

            if (res.toLowerCase() == "d") {
                Docket_Charge = Docket_Charge + D_Docket;
                // alert(Docket_Charge);
            }
            else if (res.toLowerCase() == "p") {
                Docket_Charge = Docket_Charge + P_Docket;
            }
            else if (res.toLowerCase() == "e") {
                Docket_Charge = Docket_Charge + E_Docket;
            }
            else if (res.toLowerCase() == "v") {
                Docket_Charge = Docket_Charge + V_Docket;
            }
            else if (res.toLowerCase() == "i") {
                Docket_Charge = Docket_Charge + I_Docket;
            }
            else if (res.toLowerCase() == "n") {
                Docket_Charge = Docket_Charge + N_Docket;
            }
            else if (res.toLowerCase() == "g") {
                Docket_Charge = Docket_Charge + G_Docket;
            }
            //////////////////


            total = total + (item.Risksurcharge + item.Amount + item.loadingcharge);


        });


        $('#total').val(total);
        $('#total').keyup();
        $('#Docket_charges').val(Docket_Charge);
        $('#Docket_charges').keyup();
        set_Docket_charges();


        $('#generate-invoice tbody').append(rows);
    },
    error: function (emp) {
        alert('error');
    }
});


}






        $('#total,#fullsurchargetax,#Royalty_charges,#Docket_charges,#othercharge,#servicetax').keyup(function () {
var total = $('#total').val();
var fullsurchargetax = $('#fullsurchargetax').val();

var percamount = ((total * parseFloat("0" + fullsurchargetax)) / 100);

$('#fullsurchargetaxtotal').val(percamount);

set_subtotal();
Gst_Amount();
Net_Amount();
});



$('[name="discount"]').change(function () {

var Invoice = $('input[name="discount"]:checked').val();

//alert(Insuranceval);

if (Invoice == "yes") {
    $('#discountdiv').show();
    $('#discountper').keyup();
}
else {
    $('#discountdiv').hide();
    $("#AddCons").click();
}


});


$('#discountper').keyup(function () {



var discount = $('#discountper').val();

    var percamount = ((parseFloat("0" + total) * parseFloat("0" + discount)) / 100);

    $('#discountamount').val(percamount);

var ttl = total;
var set_total_amt = ttl - percamount;

if (percamount != 0) {

    $('#total').val(set_total_amt);

    $('#total').keyup();
}
else {
    $('#total').val(total);
}

});


function set_subtotal() {

var total = $('#total').val();
var fullsurchargetax = $('#fullsurchargetaxtotal').val();

$('#subtotal').val(parseFloat("0" + total) + parseFloat("0" + fullsurchargetax));
}


function set_Docket_charges() {


var percamount = ((total * parseFloat("0" + Royalty_Per)) / 100);

$('#Royalty_charges').val(percamount);
$('#Royalty_charges').keyup();

//alert(percamount);
}

function Net_Amount() {

var total = $('#total').val();
var fullsurchargetax = $('#fullsurchargetaxtotal').val();
var Royalty_charges = $('#Royalty_charges').val();
var Docket_charges = $('#Docket_charges').val();
var Gst = $('#servicetaxtotal').val();
var other_charges = $('#othercharge').val();



var netamt = parseFloat("0" + total) + parseFloat("0" + fullsurchargetax) + parseFloat("0" + Royalty_charges) + parseFloat("0" + Docket_charges) + parseFloat("0" + Gst) + parseFloat("0" + other_charges);

// alert(netamt);
$('#netamount').val(netamt.toFixed(2));
}


function Gst_Amount() {

var total = $('#total').val();
var fullsurchargetax = $('#fullsurchargetaxtotal').val();
var Royalty_charges = $('#Royalty_charges').val();
    var Docket_charges = $('#Docket_charges').val();

    var gst = $('#servicetax').val();

var gst_total = parseFloat("0" + total) + parseFloat("0" + fullsurchargetax) + parseFloat("0" + Royalty_charges) + parseFloat("0" + Docket_charges);

    var percamount = ((gst_total * parseFloat("0" + gst)) / 100);

$('#servicetaxtotal').val(percamount.toFixed(2));

}


        $('#Customer_Id').focusout(function () {
            var Customerid = $('#Customer_Id').val();
            if (Customerid.length > 0) {
                $.ajax({
                    type: 'Get',
                    dataType: 'json',
                    url: '/Invoice/CheckComapnyGST',
                    data: { Customerid: Customerid },
                    success: function (Data) {

                        if (Data == "0") {
                            $("#servicetax").val(0);
                            Gst_Amount();
                        }
                        else {
                            $("#servicetax").val(18);
                            Gst_Amount();
                        }
                    }
                });
            }
        });







$('#Tempdatefrom').datepicker({
autoclose: true,
format: 'dd-mm-yyyy'
});

$('#tempInvoicedate').datepicker({
autoclose: true,
format: 'dd-mm-yyyy'
});

$('#TempdateTo').datepicker({
autoclose: true,
format: 'dd-mm-yyyy'
});


/**/
/**/
if ('@ViewBag.disc' == "yes") {
        /**/
        /**/

        $('#discountdiv').show();
        $('#discountamount').keyup();
        set_subtotal();
    }
    else {
        $('#discountdiv').hide();
        set_subtotal();
    }



    var Pcustid = $("#Customer_Id").val();
    var Pperiodfrom = $("#Tempdatefrom").val();
    var Pperiodto = $("#TempdateTo").val();

    if (Pcustid != "" && Pperiodfrom != "" && Pperiodto != "") {
        $('#Customer_Id').keyup();
        $("#generate-invoice tbody").empty();
        total = 0;
        Docket_Charge = 0;
        var custid = $('#Customer_Id').val();
        var periodfrom = $('#Tempdatefrom').val();
        var periodto = $('#TempdateTo').val();

        $.ajax({
            type: 'GET',
            /**/
            /**/
            url: '@Url.Action("InvoiceTableSingle")',
    /**/
    /**/
            data: { array: array, Customerid: custid },
    dataType: 'json',
    success: function (data) {

        var rows;

        $.each(data, function (i, item) {
            console.log(item.Consignment_no);
            rows += "<tr>"
                + "<td>" + (i + 1) + "</td>"
                + "<td>" + item.Consignment_no + "</td>"
                + "<td>" + item.chargable_weight + "</td>"
                + "<td>" + item.Pincode + "</td>"
                + "<td>" + item.Mode + "</td>"

                + "<td>" + item.Amount + "</td>"
                + "<td>" + item.tembookingdate + "</td>"
                + "<td>" + item.Insurance + "</td>"
                + "<td>" + item.Claimamount + "</td>"
                + "<td>" + item.Percentage + "</td>"
                + "<td>" + item.Risksurcharge + "</td>"
                + "<td>" + item.loadingcharge + "</td>"
                + "<td>" + (item.Risksurcharge + item.Amount + item.loadingcharge) + "</td>"

                + "</tr>";




            ///////Calculating Docket amount
            var str = item.Consignment_no;
            var res = str.charAt(0);

            if (res.toLowerCase() == "d") {
                Docket_Charge = Docket_Charge + D_Docket;

            }
            else if (res.toLowerCase() == "p") {
                Docket_Charge = Docket_Charge + P_Docket;


            }
            else if (res.toLowerCase() == "e") {
                Docket_Charge = Docket_Charge + E_Docket;
            }
            else if (res.toLowerCase() == "v") {
                Docket_Charge = Docket_Charge + V_Docket;
            }
            else if (res.toLowerCase() == "i") {
                Docket_Charge = Docket_Charge + I_Docket;
            }
            else if (res.toLowerCase() == "n") {
                Docket_Charge = Docket_Charge + N_Docket;
            }
            //////////////////


            total = total + (item.Risksurcharge + item.Amount + item.loadingcharge);


        });



        $('#total').val(total);
        $('#total').keyup();
        $('#Docket_charges').val(Docket_Charge);
        $('#Docket_charges').keyup();
        set_Docket_charges();

        /**/
        /**/
        if ('@ViewBag.disc' == "yes") {
        /**/
        /**/

        $('#discountdiv').show();
        $('#discountamount').keyup();
        set_subtotal();
    }
    else {
        $('#discountdiv').hide();
        set_subtotal();
        }

        var disc = '@(Model==null?"no" : Model.discount)';

        if (disc =="yes") {
        /**/
        /**/
        $('#discountdiv').show();
        $('#discountper').keyup();
        set_subtotal();
    }
        else {

        $('#discountdiv').hide();
        set_subtotal();
    }

    $('#generate-invoice tbody').append(rows);
},
error: function (emp) {
    alert('error');
}
});



}


$(function () {


$(".tag-check").keydown(function (event) {
var tb = $(this).get(0);
var start = tb.selectionStart;

var end = tb.selectionEnd;
var reg = new RegExp("(<.+?>)", "g");
var amatch = null;
while ((amatch = reg.exec(tb.value)) != null) {
    var thisMatchStart = amatch.index - 1;
    var thisMatchEnd = amatch.index + amatch[0].length + 1;
    if (start <= thisMatchStart && end > thisMatchStart) {
        event.preventDefault();
        return false;
    }
    else if (start > thisMatchStart && start < thisMatchEnd) {
        event.preventDefault();
        return false;
    }
}
});
});

});
</script>






<script>

    $(function () {
        var availableTutorials = [

        ];
        var company_idarr = [

        ];

        $.ajax({
            type: 'GET',
            /**/
            /**/
            /**/
            /**/
            /**/
            url: '@Url.Action("CustomerIdAutocompleteForViewInvocie")',
    /**/
    /**/
    /**/
    /**/
    /**/
    data: {},
    dataType: 'json',
    success: function (data) {
        $.each(data, function (i, item) {
            company_idarr.push(item.Company_Id);
        });

    }
});

$("#Customer_Id").autocomplete({
    source: company_idarr,
    select: function (event, ui) {
        $("#Customer_Id").val(ui.item.value);
        $('#Customer_Id').keyup();

    }
});


});

</script>

@if (ViewBag.invoiceno != null)
{
    <script>
        $("#overlayBlock").show();
    /**/
    var print = '@ViewBag.pdf';
    /**/

    if (print == "True") {
        /**/
        var myParamether = '@ViewBag.invoiceno';

    /**/

    //window.open('/Invoice/ReportPrinterMethod?report=reportview&myParameter=' + myParamether, 'ReportView', '');
        $.get("/Invoice/SavesinglepdInvoice", { myParameter: myParamether }, function (data) {
            $('#saveinv').attr('href', @baseurl+"/PDF/" + data);

          document.getElementById('saveinv').click();




        });
        $("#overlayBlock").hide();
}
    </script>
}
else
{
    <script>
        $("#overlayBlock").hide();
    </script>
}

<a id="savecon" style="" href="" download target="_blank">
</a>


@if (ViewBag.GST == null || ViewBag.GST=="0")
{
    <script>
        $("#servicetax").val(0);
        $("#servicetaxtotal").val(0);
    </script>
}
