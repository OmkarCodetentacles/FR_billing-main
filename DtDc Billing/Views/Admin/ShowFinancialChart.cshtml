<!DOCTYPE HTML>
<html>

<head>
    <meta charset="utf-8">
    <style>
        .chart {
            border: 3px solid #94ccb5 !important;
        }
    </style>
</head>

<body style="display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0;">

    <div class="col-md-12">
        <div class="box box-info box-collapsed" style="width: 100%;justify-content:center;align-content:center">
            <div class="box-header box-header-collapsed with-border">
                <p><strong style="color: #0049af; font-size: 20px;">Financial Summary Pie Chart</strong> </p>

                <div class="box-tools box-tools-collapsed pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>

            <div class="box-body box-body-collapsed" style="width:500px;height:500px">
                <canvas id="myChart" class="chart" width="400" height="400"></canvas>

                <!-- Include Chart.js -->
                <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0-rc.1/Chart.bundle.js"></script>
                <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>

                <script>
                    var result = @Html.Raw(ViewBag.DataPoints); // Make sure your ViewBag.DataPoints is correctly formatted
                    var labels = ['Total Revenue', 'Outstanding Invoices', 'Invoices Paid', 'Invoices Unpaid', 'Total Expense'];
                    var data = [
                        result.TotalRevenue,
                        result.OutstandingInvoicesAmount,
                        result.InvoicesPaidAmount,
                        result.InvoicesUnpaidAmount,
                        result.TotalExpense
                    ];

                    var chartData = {
                        labels: labels,
                        datasets: [{
                            data: data,
                            backgroundColor: ['#FF6347', '#FFCC00', '#32CD32', '#FFD700', '#6A5ACD'], // Color for each segment
                            borderColor: '#fff',
                            borderWidth: 1
                        }]
                    };

                    var ctx = document.getElementById('myChart').getContext('2d');
                    var myPieChart = new Chart(ctx, {
                        type: 'pie',  // Change to 'pie' for Pie Chart
                        data: chartData,
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'top',
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(tooltipItem) {
                                            var label = tooltipItem.label || '';
                                            if (label) {
                                                label += ': ' + tooltipItem.raw.toLocaleString();
                                            }
                                            return label;
                                        }
                                    }
                                }
                            }
                        }
                    });
                </script>
            </div>
        </div>
    </div>

</body>

</html>
