@model DtDc_Billing.Models.CompanyModel


@using (Ajax.BeginForm("RatemasterEditCompany", "Ratemaster", new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "frmEmp" }))
{
    @Html.AntiForgeryToken()
    <style>
        .padding-left-0 {
            padding-left: 0
        }
    </style>

    <div class="form-horizontal mt-15">
        <!-- /.box-header -->
        @{
            var successMessage = ViewBag.Message as string;
        }

        @if (!string.IsNullOrEmpty(successMessage))
        {
            @Html.Partial("~/Views/Shared/AlertPartial.cshtml", new Tuple<string, string>("success", successMessage))
        }

        @{
            var sMessage = TempData["Success"] as string;
        }

        @if (!string.IsNullOrEmpty(sMessage))
        {
            @Html.Partial("~/Views/Shared/AlertPartial.cshtml", new Tuple<string, string>("success", successMessage))
        }


       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="col-md-3 padding-left-0">Company Id</label>
            <div class="col-md-5">
                @Html.DisplayFor(model => model.Company_Id, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessage("C_IdError")
                @Html.ValidationMessageFor(model => model.Company_Id, "", new { @class = "text-danger" })

                <input type="hidden" name="Company_Id" value="@Model.Company_Id" />
                <input type="hidden" name="c_id" value="@Model.c_id" />
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">Company Name</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Company_Name, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Company_Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="col-md-3 padding-left-0">Company Address</label>
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.Company_Address, new { @class = "form-control input-sm", @rows = 3 })
                @Html.ValidationMessageFor(model => model.Company_Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">Phone Number</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">Email</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">Insurance</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Insurance, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Insurance, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <label class="col-md-3 padding-left-0">Minimum Risk Charge</label>
            <div class="col-md-5">
                @Html.DropDownList("Minimum_Risk_Charge", null, htmlAttributes: new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.Minimum_Risk_Charge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">Other Details</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Other_Details, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Other_Details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">Fuel SurCharge</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Fuel_Sur_Charge, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Fuel_Sur_Charge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">Topay Charge</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Topay_Charge, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Topay_Charge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">COD Charge</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Cod_Charge, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Cod_Charge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">GEC Fuel SurCharge</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Gec_Fuel_Sur_Charge, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Gec_Fuel_Sur_Charge, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="col-md-3 padding-left-0">Royalty Charges</label>
            <div class="col-md-5" style="display:flex">
                @Html.EditorFor(model => model.Royalty_Charges, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Royalty_Charges, "", new { @class = "text-danger" })
                <span id="royalty-per">
                    %
                </span>
            </div>

        </div>
        @Html.Hidden("Pf_code")

        @*<div class="form-group">

            <label class="col-md-3"><P></P>MF Code</label>
            <div class="col-md-2">
                @Html.TextBox("Pf_code", (string)ViewBag.Pf_code, new { @class = "form-control", @readonly = "readonly" })

                @Html.DropDownList("Pf_code", null, htmlAttributes: new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.Pf_code, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <label class="col-md-3 padding-left-0">GST No</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Gst_No, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Gst_No, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">Pan No</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Pan_No, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Pan_No, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">D</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.D_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.D_Docket, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">M</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.P_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.P_Docket, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">E</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.E_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.E_Docket, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">V</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.V_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.V_Docket, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">I</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.I_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.I_Docket, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">N</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.N_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.N_Docket, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 padding-left-0">G</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.G_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.G_Docket, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            <label class="col-md-3">UserName</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3">Password</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>*@




        <input type="hidden" id="selected_tab" name="selected_tab" value="1" />
        <div class="form-group">
            <div class="col-md-9 col-md-offset-3">
                <input type="submit" value="Next" class="btn btn-primary" id="editBtn" />
            </div>
        </div>
    </div>


}
<script>

     $(document).ready(function () {
         $('#editBtn').on('click', function () {

         showLoader('overlayBlock');
     });
     var data = '@TempData["Success"]';

     if (data != null && data!="")
     {
         alert(data);
         document.getElementById('overlayBlock').style.display = 'none';

     }


 });

</script>



@if (ViewBag.SuccessCompany != null)
{
    <script>
        $(document).ready(function () {
            location.reload();
        });
    </script>

}

@if (ViewBag.Message != null)
{
    <script>

$(document).ready(function(){

//alert('@ViewBag.Message');

});

    </script>

}

<!--Addding Loader After Submitting-->


<div class="overlay" id="overlayBlock">
    <div class="loader"></div>
</div>



<style>
    #royalty-per {
        vertical-align: sub;
    }

    #Pf_code, #Royalty_Charges, #D_Docket, #P_Docket, #E_Docket, #V_Docket, #I_Docket, #N_Docket, #Insurance, #Minimum_Risk_Charge, #Other_Details, #Fuel_Sur_Charge, #Topay_Charge, #Cod_Charge, #Gec_Fuel_Sur_Charge {
        width: 100%;
    }
</style>

<script>
     // Show loader if TempData flag is set

        function showLoader() {
            var showLoader = '@TempData["ShowLoader"]';

            document.getElementById('overlayBlock').style.display = 'block';

        }
</script>


<style>
    .logo-text {
        font-size: 1.3em;
        font-family: 'Roboto Slab', serif;
    }
</style>
<style>
    .overlay {
        position: fixed;
        width: 100%;
        height: 100%;
        background-color: #00000052;
        top: 0;
        left: 0;
        z-index: 9999;
        display: none;
    }

    .loader {
        position: absolute;
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border-top: 16px solid blue;
        border-bottom: 16px solid blue;
        width: 120px;
        height: 120px;
        -webkit-animation: spin 2s linear infinite;
        top: 40%;
        animation: spin 2s linear infinite;
        bottom: 50%;
        left: 50%;
        right: 50%;
    }


    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>
<style>
    #royalty-per {
        vertical-align: sub;
    }

    #Pf_code, #Royalty_Charges, #D_Docket, #P_Docket, #E_Docket, #V_Docket, #I_Docket, #N_Docket, #Insurance, #Minimum_Risk_Charge, #Other_Details, #Fuel_Sur_Charge, #Topay_Charge, #Cod_Charge, #Gec_Fuel_Sur_Charge {
        width: 100%;
    }
</style>
