@model DtDc_Billing.Models.CompanyModel

@using (Html.BeginForm("RatemasterCompany", "Ratemaster"))
{
    @Html.AntiForgeryToken()
    <style>
        textarea {
            display: block;
            width: 100%;
            height: 34px;
            padding: 6px 12px;
            font-size: 14px;
            line-height: 1.42857143;
            color: #555;
            background-color: #fff;
            background-image: none;
            border: 1px solid #ccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
            -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
            transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
        }
    </style>
    <section>


        <div class="form-horizontal" style="padding:20px 0">

            <div class="row">
                <div class="col-md-4">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label class="">Company Id</label>
                        <div class="">
                            @Html.EditorFor(model => model.Company_Id, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessage("C_IdError")
                            @Html.ValidationMessageFor(model => model.Company_Id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">Company Name</label>
                        <div class="">
                            @Html.EditorFor(model => model.Company_Name, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.Company_Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">Company Address</label>
                        <div class="">
                            @Html.TextAreaFor(model => model.Company_Address, new { @class = "form-control input-sm", @rows = 1 })
                            @Html.ValidationMessageFor(model => model.Company_Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">Phone Number</label>
                        <div class="">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control input-sm", oninput = "this.value = this.value.replace(/[^0-9]/g, '').substring(0, 10)" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">Email</label>
                        <div class="">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input-sm", @type = "Email" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">
                            Insurance(%)
                        </label>
                        <div class="">
                            @Html.EditorFor(model => model.Insurance, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.Insurance, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">Minimum Risk Surcharge</label>
                        <div class="">
                            @Html.DropDownList("Minimum_Risk_Charge", null, htmlAttributes: new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.Minimum_Risk_Charge, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">Other Details</label>
                        <div class="">
                            @Html.EditorFor(model => model.Other_Details, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.Other_Details, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">Fuel Surcharge(%)</label>
                        <div class="">
                            @Html.EditorFor(model => model.Fuel_Sur_Charge, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.Fuel_Sur_Charge, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">Topay Charge</label>
                        <div class="">
                            @Html.EditorFor(model => model.Topay_Charge, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.Topay_Charge, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">COD Charge</label>
                        <div class="">
                            @Html.EditorFor(model => model.Cod_Charge, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.Cod_Charge, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">
                            GEC Fuel Surcharge(%)
                        </label>
                        <div class="">
                            @Html.EditorFor(model => model.Gec_Fuel_Sur_Charge, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.Gec_Fuel_Sur_Charge, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">
                            Royalty Charges(%)
                        </label>
                        <div style="display:flex;width:100%">
                            <div class="" style=" width: 94%;">
                                @Html.EditorFor(model => model.Royalty_Charges, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(model => model.Royalty_Charges, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>

                    @Html.Hidden("Pf_code")
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">GST No</label>
                        <div class="">
                            @Html.EditorFor(model => model.Gst_No, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.Gst_No, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">Pan No</label>
                        <div class="">
                            @Html.EditorFor(model => model.Pan_No, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.Pan_No, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">

                    <div class="form-group">
                        <label class="">D</label>
                        <div class="">
                            @Html.EditorFor(model => model.D_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.D_Docket, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">M</label>
                        <div class="">
                            @Html.EditorFor(model => model.P_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.P_Docket, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">E</label>
                        <div class="">
                            @Html.EditorFor(model => model.E_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.E_Docket, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">V</label>
                        <div class="">
                            @Html.EditorFor(model => model.V_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.V_Docket, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">I</label>
                        <div class="">
                            @Html.EditorFor(model => model.I_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.I_Docket, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">N</label>
                        <div class="">
                            @Html.EditorFor(model => model.N_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.N_Docket, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="">G</label>
                        <div class="">
                            @Html.EditorFor(model => model.G_Docket, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.G_Docket, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @*<div class="col-md-4">
                        <div class="form-group">
                            <label class="">UserName</label>
                            <div class="">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="">Password</label>
                            <div class="">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@
                <div class="col-md-12">
                    <input type="hidden" id="selected_tab" name="selected_tab" value="1" />
                    <div class="form-group">
                        <div style=" text-align: end;">
                            <input type="submit" value="Next" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>


        </div>

    </section>

}
@**@
<div class="overlay" id="overlayBlock">
    <div class="loader"></div>
</div>
<style>
    .overlay {
        position: fixed;
        width: 100%;
        height: 100%;
        background-color: #00000052;
        top: 0;
        left: 0;
        z-index: 9999;
        display: none;
    }

    .loader {
        position: absolute;
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border-top: 16px solid blue;
        border-bottom: 16px solid blue;
        width: 120px;
        height: 120px;
        -webkit-animation: spin 2s linear infinite;
        top: 40%;
        animation: spin 2s linear infinite;
        bottom: 50%;
        left: 50%;
        right: 50%;
    }


    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }




    .radio {
        display: inline-block;
        padding-right: 20px;
    }
</style>


<style>
    #royalty-per {
        vertical-align: sub;
    }

    #Pf_code, #Royalty_Charges, #D_Docket, #P_Docket, #E_Docket, #V_Docket, #I_Docket, #N_Docket, #Insurance, #Minimum_Risk_Charge, #Other_Details, #Fuel_Sur_Charge, #Topay_Charge, #Cod_Charge, #Gec_Fuel_Sur_Charge {
        width: 100%;
    }
</style>
