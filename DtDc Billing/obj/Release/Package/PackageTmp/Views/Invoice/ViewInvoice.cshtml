@model IEnumerable<DtDc_Billing.Models.InvoiceModel>

@{
    /**/

    ViewBag.Title = "ViewInvoice";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}


<style>
    .select2-container {
        width: 100% !important;
    }

    .select2-selection--single {
        height: 38px !important;
        padding: 6px 12px !important;
    }

    .select2-selection__rendered {
        line-height: 26px !important;
    }
    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        background-color: #0d4c76 !important;
    }
</style>

<!-- JavaScript -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

<style>
    .pagination {
        display: inline-block;
    }

        .pagination a {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .3s;
            border: 1px solid #ddd;
        }

            .pagination a.active {
                background-color: #468dbc;
                color: white;
                border: 1px solid #468dbc;
            }

            .pagination a:hover:not(.active) {
                background-color: #ddd;
            }

    .status-button {
        display: inline-block;
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: bold;
        text-align: center;
        transition: background-color 0.3s, transform 0.3s;
    }

    .btn-success {
        background-color: #28a745; /* Green */
        color: white;
        align-content: center;
        justify-content: center;
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
        font-size: 14px;
        border-left: 6px solid #28a745;
        border-top: 1px solid #f39c12;
        margin: 20px 20px 20px 30px !important;
        transition: transform 0.2s ease; /* Add a hover effect */
        border-radius: 50px; /* Make corners circular */
    }

    .btn-danger {
        background-color: #dc3545; /* Red */
        color: white;
        align-content: center;
        justify-content: center;
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
        font-size: 14px;
        border-top: 1px solid #dc2a4b;
        margin: 20px 20px 20px 30px !important;
        transition: transform 0.2s ease; /* Add a hover effect */
        border-radius: 50px; /* Make corners circular */
    }

    .btn-warning {
        background-color: #ffc107; /* Yellow */
        color: black;
        align-content: center;
        justify-content: center;
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
        font-size: 14px;
        border-top: 1px solid #ffc107;
        margin: 20px 20px 20px 30px !important;
        transition: transform 0.2s ease; /* Add a hover effect */
        border-radius: 50px; /* Make corners circular */
    }

    .status-button:hover {
        transform: scale(1.05); /* Slightly enlarge the button on hover */
    }

    .status-button:active {
        transform: scale(0.95); /* Slightly shrink the button when clicked */
    }
</style>

<link href="~/admin-lte/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css" rel="stylesheet" />
<script src="~/admin-lte/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>


<!-- Main content -->
<style>
    .btn-warning {
        padding: 8px;
    }

    .Viewinvoice th {
        width: 11.69% !important;
    }

    .btn-info {
        background-color: #0049af;
        border-color: #0049af;
        width: 277px;
        border-radius: 0;
    }
</style>
<div class="content-wrapper">
    <div class="box box-info" style="padding: 16px 16px !important">
        <div class="box-header with-border d-flex" style="display:flex; justify-content:space-between">
            <h4>
                View Invoice
                <a href="https://www.youtube.com/watch?v=4-aqpuhwrW8&list=PLT-Gd9X3Y1afr1FZRb8Z8ELFncnWwOhzz&index=25"
                   target="_blank"
                   data-toggle="tooltip"
                   title="Click to view more info">
                    <i class="fa fa-info-circle" style="font-size:25px;"></i>
                </a>

            </h4>
            <a href="@Url.Action("InvoiceZip", "Invoice")" class="btn btn-info pull-right">Download Bundle Of Invoice</a>

        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-12 col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    @Html.Partial("GetInvoiceDataForDashboard")
                </div>
            </div>
            </div>  
            <div class="box-body">
               
                <div class="row">
                    <div class="col-xs-12">
                        @{
                            var successMessage = TempData["success"] as string;
                            var errorMessage = TempData["error"] as string;
                        }


                        @if (!string.IsNullOrEmpty(successMessage))
                        {
                            @Html.Partial("~/Views/Shared/AlertPartial.cshtml", new Tuple<string, string>("success", successMessage))
                        }
                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            @Html.Partial("~/Views/Shared/AlertPartial.cshtml", new Tuple<string, string>("danger", errorMessage))
                        }


                        @using (Html.BeginForm("ViewInvoice", "Invoice", FormMethod.Get, new { id = "FormSubmit" }))
                        {

                            <!--<label for="cars">Size:</label>
                        <select name="size">
                            <option value="100" @((ViewBag.size == 100) ? "selected" : "")>100</option>
                            <option value="500" @((ViewBag.size == 500) ? "selected" : "")>500</option>
                            <option value="1000" @((ViewBag.size == 1000) ? "selected" : "")>1000</option>-->@*<option value="200" @((ViewBag.size == 200) ? "selected" : "")>200</option>*@<!--</select>-->@*<div class="col-md-5">
                                <div class="form-group">
                                    <div class="pf-code">
                                        <label>Firm Name</label>
                                        <label class="Reqired">*</label>
                                        @Html.DropDownList("FirmDetails", "-Please select-")
                                    </div>
                                </div>
                            </div>*@<div class="col-md-3" style="margin-top:10px;padding-left:0">

                                <label>Company Name</label>

                                <select name="Companydetails" id="Companydetails" class="form-control" multiple="multiple">
                                    <!-- Options will be dynamically populated -->
                                    @if (ViewBag.CompanyList != null)
                                    {
                                        foreach (var icom in ViewBag.CompanyList)
                                        {
                                            <option value="@icom" selected>@icom</option>

                                        }
                                    }

                                </select>
                                @*@Html.DropDownList("Companydetails", "-Please select-")*@

                            </div>
                            <div class="col-md-3" style="margin-top:10px;padding-left:0">

                                <label>Invoice Number</label>

                                <input type="text" name="invoiceNo" id="invoiceNo" class="form-control" value="@ViewBag.invoiceno">

                                @*@Html.DropDownList("Companydetails", "-Please select-")*@

                            </div>

                            <div class="col-md-2" style="margin-top: 10px; padding-left: 0">
                                <label>From Date</label>
                                @*<label class="Reqired">*</label>*@
                                <input type="text" name="invfromdate" id="invfromdate" class="form-control" value="@ViewBag.invfromdate">
                            </div>


                            <div class="col-md-2" style="margin-top: 10px; padding-left: 0">
                                <label>To Date</label>
                                @*<label class="Reqired">*</label>*@
                                <input type="text" name="invtodate" id="invtodate" class="form-control" value="@ViewBag.invtodate">
                            </div>

                            <input type="hidden" value="@ViewBag.firmid">
                            <input type="hidden" value="@ViewBag.Companyid">

                            @*  @Html.HiddenFor(m => m.Firm_Id, new { @Value = ViewBag.firmid })*@

                            <div class="col-md-1" style="padding:0">
                                <input type="submit" class="btn btn-primary sbmt" name="submit" id="submitbook" value="Submit" style="margin:33px auto;width:100%" />
                            </div>

                            <br /><br /><br /><br />
                        }
                        <!-- /.box-header -->

                        <table id="table_display_block" class="table Viewinvoice" style="margin-top:100px">
                            <thead>
                                <tr>

                                    <th>Sr.No</th>

                                    <th></th>
                                    <th>
                                        Invoice No
                                    </th>
                                    <th>
                                        Customer Id
                                    </th>
                                    <th>
                                        Invoice date
                                    </th>
                                    <th>
                                        Period From
                                    </th>
                                    <th>
                                        Period To
                                    </th>
                                    <th>
                                        Total
                                    </th>
                                    <th>
                                        Fuel Surcharge(%)
                                    </th>
                                    <th>
                                        Fuel Surcharge Total
                                    </th>
                                    <th>
                                        Discount(%)
                                    </th>
                                    <th>Discount Amount</th>
                                    <th>
                                        GST(%)
                                    </th>
                                    <th>
                                        GST Amount
                                    </th>
                                    <th>
                                        Other charge
                                    </th>
                                    <th>
                                        Net Amount
                                    </th>
                                    <th>Paid Amount</th>
                                    <th>Status</th>


                                </tr>
                            </thead>
                            <tbody>
                                @{ var i = 1;
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@i</td>
                                            <td>
                                                @*   @Html.ActionLink("View", "ReportPrinterMethod", new { myParameter = item.invoiceno, firmid = item.Firm_Id })*@
                                                <div style="display:flex; gap:5px">
                                                    <a href="@Url.Action("Download", "Invoice", new { id = item.IN_Id })" target="_blank" class="view-btn">View</a>
                                                    @Html.ActionLink("Edit", "GenerateInvoice", new { Invoiceno = item.invoiceno }, new { @class = "edit-btn" })
                                                    @Html.ActionLink("Delete", "DeleteInvoice", "Invoice", new { invoiceid = item.IN_Id, invfromdate = ViewBag.invfromdate, Companydetails = ViewBag.Companydetails, invtodate = ViewBag.invtodate }, new { onclick = "return confirm('Are you sure you want to delete this invoice? Please note that this invoice number cannot be reused in the future, and all associated payment details will be permanently deleted.')", @class = "delete-btn" })

                                                </div>

                                                @*</td>
                                                <td>*@
                                            </td>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.invoiceno)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Customer_Id)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.tempInvoicedate)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Tempdatefrom)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.TempdateTo)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.total)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.fullsurchargetax)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.fullsurchargetaxtotal)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.discountper)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.discountamount)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.servicetax)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.servicetaxtotal)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.othercharge)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.netamount)
                                            </td>
                                            <td>@(item.paid!=null?item.paid:0)  </td>
                                            <td>
                                                @if (item.paid >= item.netamount)
                                                {
                                                    <span class="btn btn-success status-button">Paid</span>
                                                }
                                                else if (item.paid == null || item.paid == 0)
                                                {
                                                    <span class="btn btn-danger status-button">Unpaid</span>
                                                }
                                                else if (item.paid != null && item.paid < item.netamount)
                                                {
                                                    <span class="btn btn-warning status-button">Partial Paid</span>
                                                }
                                            </td>

                                        </tr>

                                        i++;
                                    }
                                }
                            </tbody>

                        </table>

                        @*<div class="pagination">
                            @{
                                var getTotalCount = Model.Select(x => x.totalCount).FirstOrDefault();


                                if (getTotalCount > 10)
                                {

                                    for (int ii = 1; ii <= (getTotalCount / ViewBag.size); ii++)
                                    {

                                        <a href="@Url.Action("ViewInvoice","Invoice", new { invfromdate = ViewBag.invfromdate ,invtodate = ViewBag.invtodate,size = ViewBag.size, pageNo = ii,Firm_Id = ViewBag.firmid})" class="@(ViewBag.pageNo == ii ? "active":"")">@ii</a>

                                    }
                                }
                            }
                        </div>*@
                    </div>

                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->

    </div>
<!-- /.content -->
<script>

    $(function () {

        $('#table_display_block').dataTable({
            "bPaginate": true,
            "bLengthChange": true,
            "bFilter": true,
            "bSort": true,
            "bInfo": false,
            "bAutoWidth": false
        });


    });


    $('#invfromdate').datepicker({
        autoclose: true,
        format: 'dd-mm-yyyy'
    })

    $('#invtodate').datepicker({
        autoclose: true,
        format: 'dd-mm-yyyy'
    })


    $(document).ready(function () {
        $('.sbmt').click(function () {
            var frmdate = $('#invfromdate').val();

            var todate = $('#invtodate').val();

            var firmid = $('#FirmDetails').val();

            //if (firmid == "") {
            //    alert("Please Select Firm");
            //    return false;
            //}
            //if (frmdate == "") {
            //    alert("Please Enter Start Date");
            //    return false;
            //}
            //else if (todate == "") {
            //    alert("Please Enter End Date");
            //    return false;
            //}

            //else {
            //    return true;
            //}

        });





    });

</script>

@*<script>
        var a =@Request.Params["Firm_Id"];

        $(document).ready(function () {
            $.ajax({
                type: "GET",
                url: "/Invoice/getFirm",
                data: "{}",
                success: function (data) {
                    // var s = '<option value="-1">Please Select a Department</option>';
                    var s;
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].Firm_Id + '">' + data[i].Firm_Name + '</option>';
                    }
                    $("#FirmDetails").html(s);

                    $("#FirmDetails").val(a);


                }



            });
        });


    </script>

    <script>
        $("#FirmDetails").change(function () {
            //var selectedStudentVal = $("#ddlStudent").val();
            //window.location.replace("/Invoice/GenerateInvoice?Firm_Id=" + selectedStudentVal);

            var departmentsDropdown = $("#FirmDetails").val();
            // window.history.pushState("null", "null", "/Invoice/GenerateInvoice?Firm_Id=" + departmentsDropdown);
            window.location.replace("/Invoice/ViewInvoice?Firm_Id=" + departmentsDropdown);

            $("#FirmDetails").html(departmentsDropdown);
        });




    </script>*@


<style>
    .pf-code select, .emp-id select {
        display: block;
        width: 60%;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        color: #555;
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
        -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
    }

    #example1 {
        display: block;
    }

    .table-scroll {
        height: 400px;
    }
</style>

<style>
    .select2-container {
        width: 100% !important;
    }

    .select2-search--inline .select2-search__field {
        width: 115em !important; /* Adjust width */
    }

    .select2-selection--multiple {
        min-height: 38px;
    }

    .Reqired {
        color: red;
    }

    #example1 {
        display: block;
    }

    .table-scroll {
        height: 400px;
    }
    /*#Companydetails {
        max-height: 200px;*/ /* Set maximum height */
    /*min-height: 100px;*/ /* Optional: Set minimum height */
    /*overflow-y: auto;*/ /* Add scrollbar when content overflows */
    /*}*/
</style>

<script>
    var availableinvoicesarr = [];
    var availableTutorials = [];
    var company_idarr = [];
/////Sender Autocomplete



    @*$.ajax({
        type: 'GET',
                url: '@Url.Action("CustomerIdAutocompleteForViewInvocie")',
        data: { },
        dataType: 'json',
        success: function(data) {
            $.each(data, function(i, item) {
                        company_idarr.push(item.Company_Id);
            });
                }
            });*@
      @*$.ajax({
        type: 'GET',
        url: '@Url.Action("CustomerIdAutocompleteForViewInvocie")',
        dataType: 'json',
        success: function(data) {
            // Populate the select dropdown with options
            $.each(data, function(i, item) {
                $("#Companydetails").append(
                    $("<option>", {
                        value: item.Company_Id,
                        text: item.Company_Id // Assuming "Company_Name" is available
                    })
                );
            });
        }
    });*@

//    $("#Companydetails").autocomplete({
//        source: company_idarr,
//select: function(event, ui) {
//    $("#Companydetails").val(ui.item.value);

//    $("#Companydetails").trigger("focusout");
//        }
//    });

    //$("#Companydetails").autocomplete({
    //    source: company_idarr,
    //    select: function(event, ui) {

    //    }
    //});



$(function () {
    // Fetch data via AJAX
    $.ajax({
        type: 'GET',
        url: '@Url.Action("CustomerIdAutocompleteForViewInvocie")',
        dataType: 'json',
        success: function (data) {
            var companySelect = $('#Companydetails');
            companySelect.empty(); // Clear existing options

            // Populate the dropdown with only Company_Id
            $.each(data, function (i, item) {
                companySelect.append(
                    $('<option>', {
                        value: item.Company_Id,
                        text: item.Company_Id
                    })
                );
            });

             // Get selected company IDs from ViewBag
            var selectedCompanies = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.CompanyList ?? new List<string>()));

            // Preselect options based on ViewBag.CompanyList
            companySelect.val(selectedCompanies).trigger('change');
            // Initialize Select2
            companySelect.select2({
                placeholder: "Select Companies",
                allowClear: true,
                width: '125px',
                multiple: true // Allow multiple selections
            });
        },
        error: function (xhr, status, error) {
            console.error('Failed to fetch company data:', error);
        }
    });

    // Handle selection change
    $('#Companydetails').on('change', function () {
        var selectedCompanies = $(this).val(); // Get all selected values
        console.log('Selected Companies:', selectedCompanies);
    });
});

    $('#Companydetails').focusout(function () {
        var Customerid = $('#Companydetails').val();
        if (Customerid.length >= 3) {
            $.ajax({
                type: 'Get',
                dataType: 'json',
                url: '/Booking/Checkcompany',
                data: { Customerid: Customerid },
                success: function (Data) {

                    if (Data == "0") {
                        //alert("Please Enter Valid Company Id");
                        $('#Companydetails').val('');
                    }



                }
            });
        }
    });


    $(function () {

          $.ajax({
      type: 'GET',
      url: '@Url.Action("InvoiceNumberAutocompleteForViewInvocie")',
              data: { Customer_Id:null},
      dataType: 'json',
              success: function (data) {

          $.each(data, function (i, item) {
              availableinvoicesarr.push(item.invoiceno);
          })
      }
  });
  //      $("#invoiceno").autocomplete({
  //          source: availableinvoicesarr,
  //          select: function (event, ui) {
  //              $("#invoiceno").val(ui.item.value);
  //              $("#invoiceno").trigger("focusout")
  //          }
  //      });
        $("#invoiceno").autocomplete({
            source: availableinvoicesarr,
          select: function (event, ui) {
              $("#invoiceno").val(ui.item.value);

              $("#invoiceno").trigger("focusout");
          }
      });
    })

</script>

<script>

    //////////$('#Companydetails').change(function () {
    //////////    var Customerid = $('#Companydetails').val();

    //////////    if (Customerid.length >= 3) {
    //////////        availableinvoicesarr = [];

    //////////        $("#invoiceno").autocomplete({
    //////////            source: availableinvoicesarr,
    //////////            select: function (event, ui) {
    //////////                $("#invoiceno").val(ui.item.value);

    //////////                $("#invoiceno").trigger("focusout");
    //////////            }
    //////////        });

    //////////        $.ajax({
    //////////            type: 'Get',
    //////////            dataType: 'json',
    //////////            url: '/Invoice/InvoiceNumberAutocompleteForViewInvocie',
    //////////            data: { Customer_Id: Customerid },
    //////////            success: function (Data) {
    //////////                $.each(Data, function (i, item) {
    //////////                    availableinvoicesarr.push(item.invoiceno);
    //////////                })

    //////////            }
    //////////        });
    //////////    }
    //////////    $("#invoiceno").autocomplete({
    //////////        source: availableinvoicesarr,
    //////////        select: function (event, ui) {
    //////////            $("#invoiceno").val(ui.item.value);

    //////////            $("#invoiceno").trigger("focusout");
    //////////        }
    //////////    });


    //////////});
    //////////$("#invoiceno").focusout(function () {
    //////////    availableinvoicesarr = [];
    //////////    $("#invoiceno").autocomplete({
    //////////        source: availableinvoicesarr,
    //////////        select: function (event, ui) {
    //////////            $("#invoiceno").val(ui.item.value);

    //////////            $("#invoiceno").trigger("focusout");
    //////////        }
    //////////    });

    //////////});
    ////$('#Companydetails').change(function () {
    ////    var Customerid = $('#Companydetails').val();

    ////    if (Customerid.length >= 3) {
    ////        availableinvoicesarr = [];

    ////        $("#invoiceno").autocomplete({
    ////            source: availableinvoicesarr,
    ////            select: function (event, ui) {
    ////                $("#invoiceno").val(ui.item.value);

    ////                $("#invoiceno").trigger("focusout");
    ////            }
    ////        });

    ////        $.ajax({
    ////            type: 'Get',
    ////            dataType: 'json',
    ////            url: '/Invoice/InvoiceNumberAutocompleteForViewInvocie',
    ////            data: { Customer_Id: Customerid },
    ////            success: function (Data) {
    ////                $.each(Data, function (i, item) {
    ////                    availableinvoicesarr.push(item.invoiceno);
    ////                })

    ////            }
    ////        });
    ////    }
    ////    $("#invoiceno").autocomplete({
    ////        source: availableinvoicesarr,
    ////        select: function (event, ui) {
    ////            $("#invoiceno").val(ui.item.value);

    ////            $("#invoiceno").trigger("focusout");
    ////        }
    ////    });


    ////});
    ////$("#invoiceno").focusout(function () {
    ////    availableinvoicesarr = [];
    ////    $("#invoiceno").autocomplete({
    ////        source: availableinvoicesarr,
    ////        select: function (event, ui) {
    ////            $("#invoiceno").val(ui.item.value);

    ////            $("#invoiceno").trigger("focusout");
    ////        }
    ////    });

    ////});

    $(document).ready(function () {
        $('#Companydetails').change(function () {
            var Customerid = $('#Companydetails').val();

            if (Customerid.length >= 3) {
                availableinvoicesarr = []; // Clear the array before fetching new data

                $.ajax({
                    type: 'GET',
                    dataType: 'json',
                    url: '/Invoice/InvoiceNumberAutocompleteForViewInvocie',
                    data: { Customer_Id: Customerid },
                    success: function (Data) {
                        availableinvoicesarr = Data.map(item => item.invoiceno); // Populate the array
                        $("#invoiceno").autocomplete('option', 'source', availableinvoicesarr); // Update autocomplete source
                    },
                    error: function (xhr, status, error) {
                        console.error('Failed to fetch invoice numbers:', error);
                    }
                });
            }
        });

        // Initialize autocomplete for the first time
        $("#invoiceno").autocomplete({
            source: availableinvoicesarr,
            select: function (event, ui) {
                $("#invoiceno").val(ui.item.value);
                $("#invoiceno").trigger("focusout");
            }
        });

        $("#invoiceno").focusout(function () {
            availableinvoicesarr = []; // Clear array on focusout
            $("#invoiceno").autocomplete('option', 'source', availableinvoicesarr); // Reset source
        });
    });


</script>

@*<script>

        $(document).ready(function () {
            $.ajax({
                type: "GET",
                url: "/Invoice/getFirm",
                data: "{}",
                success: function (data) {

                    var s;
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].Firm_Id + '">' + data[i].Firm_Name + '</option>';
                    }
                    $("#departmentsDropdown").html(s);

                    $("#departmentsDropdown").val('@ViewBag.firmid');


                }



            });
        });


    </script>*@

@*<script>
        $("#departmentsDropdown").change(function () {
            //var selectedStudentVal = $("#ddlStudent").val();
            //window.location.replace("/Invoice/GenerateInvoice?Firm_Id=" + selectedStudentVal);

            var departmentsDropdown = $("#departmentsDropdown").val();
            // window.history.pushState("null", "null", "/Invoice/GenerateInvoice?Firm_Id=" + departmentsDropdown);
            window.location.replace("/Invoice/ViewInvoice?Firm_Id=" + departmentsDropdown);

            $("#departmentsDropdown").html(departmentsDropdown);
        });




    </script>*@


@if (TempData["error"] != null)
{
    <script>
       // alert('@TempData["error"]');
    </script>
}



@if (TempData["success"] != null)
{
    <script>
    //    alert('@TempData["success"]');
    </script>
}

<!-- Validation Script -->
<script>
    $(document).ready(function () {
        $('#submitbook').on('click', function (e) {
            // Prevent form submission


            // Get values of the fields
            var companyDetails = $('#Companydetails').val().trim();
            var invoiceNo = $('#invoiceNo').val().trim();
            var invFromDate = $('#invfromdate').val().trim();
            var invToDate = $('#invtodate').val().trim();

            // Check if at least one of the fields is filled
            if (companyDetails === "" && invoiceNo === "" && (invFromDate === "" || invToDate === "")) {
                alert("Please select at least one: Company Name, Invoice Number, or From Date to To Date.");
                e.preventDefault();
                return false; // Stop the form submission
            }

            // If validation passes, submit the form
            $("#FormSubmit").submit();
        });
    });
</script>